{"componentChunkName":"component---src-templates-post-template-js","path":"/articles/lollipop","result":{"data":{"mdx":{"frontmatter":{"title":"LolliPOp","pic":"https://i.imgur.com/n4lLzMfm.jpg","time_to_read":"21min","date":"Jun 29 2020","slug":"lollipop","excerpt":"This book also does not serve as a reference to the standard library included in the language distribution. Those libraries are documented separately by extracting documentation attributes from their source code. Many of the features that one might expect to be language features are library features in Rust, so what you're looking for may be there, not here."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"LolliPOp\",\n  \"date\": \"2020-06-29\",\n  \"time_to_read\": \"21min\",\n  \"pic\": \"https://i.imgur.com/n4lLzMfm.jpg\",\n  \"categories\": [\"Children\", \"cute\", \"big-eye\"],\n  \"author\": \"Mohammad Afroz\",\n  \"excerpt\": \"This book also does not serve as a reference to the standard library included in the language distribution. Those libraries are documented separately by extracting documentation attributes from their source code. Many of the features that one might expect to be language features are library features in Rust, so what you're looking for may be there, not here.\",\n  \"slug\": \"lollipop\",\n  \"project\": \"false\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\nconst lollipop = new LolliPOp()\\n\\n\")), mdx(\"blockquote\", {\n    display: \"warning\"\n  }, \"Hello ,WHat dsfds sdf\"), mdx(\"h4\", null, \"Hello\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"lollipop"}}}